import numpy as np
import torch
import time


def ncp_nd(seq):
    bases = {'A': [1, 1, 1], 'C': [0, 1, 0], 'G': [1, 0, 0], 'T': [0, 0, 1]}
    f = np.zeros((len(seq), 4), dtype=np.float32)
    counts = {'A': 0, 'C': 0, 'G': 0, 'T': 0}

    for i, c in enumerate(seq):
        if c in bases:
            counts[c] += 1
            cb = counts[c]
            p = bases[c] + [np.round(cb / float(i + 1), 2)]
            f[i] = p
        else:
            f[i] = [0, 0, 0, 0]

    return torch.from_numpy(f)


def DPCP(seq):
    phys_dic = {
        # Shift Slide Rise Tilt Roll Twist Stacking_energy Enthalpy Entropy Free_energy Hydrophilicity
        'AA': [-0.08, -1.27, 3.18, -0.8, 7, 31, -13.7, -6.6, -18.4, -0.93, 0.04],
        'AU': [-0.06, -1.36, 3.24, 1.1, 7.1, 33, -15.4, -5.7, -15.5, -1.1, 0.14],
        'AC': [0.23, -1.43, 3.24, 0.8, 4.8, 32, -13.8, -10.2, -26.2, -2.24, 0.14, ],
        'AG': [-0.04, -1.5, 3.3, 0.5, 8.5, 30, -14, -7.6, -19.2, -2.08, 0.08],
        'UA': [0.07, -1.7, 3.38, 1.3, 9.4, 32, -14.2, -13.3, -35.5, -2.35, 0.1],
        'UU': [0.23, -1.43, 3.24, 0.8, 4.8, 32, -13.8, -10.2, -26.2, -2.24, 0.27],
        'UC': [0.07, -1.39, 3.22, 0, 6.1, 35, -16.9, -14.2, -34.9, -3.42, 0.26],
        'UG': [-0.01, -1.78, 3.32, 0.3, 12.1, 32, -11.1, -12.2, -29.7, -3.26, 0.17],
        'CA': [0.11, -1.46, 3.09, 1, 9.9, 31, -14.4, -10.5, -27.8, -2.11, 0.21],
        'CU': [-0.04, -1.5, 3.3, 0.5, 8.5, 30, -14, -7.6, -19.2, -2.08, 0.52],
        'CC': [-0.01, -1.78, 3.32, 0.3, 8.7, 32, -11.1, -12.2, -29.7, -3.26, 0.49],
        'CG': [0.3, -1.89, 3.3, -0.1, 12.1, 27, -15.6, -8, -19.4, -2.36, 0.35],
        'GA': [-0.02, -1.45, 3.26, -0.2, 10.7, 32, -16, -8.1, -22.6, -1.33, 0.21],
        'GU': [-0.08, -1.27, 3.18, -0.8, 7, 31, -13.7, -6.6, -18.4, -0.93, 0.44],
        'GC': [0.07, -1.7, 3.38, 1.3, 9.4, 32, -14.2, -10.2, -26.2, -2.35, 0.48],
        'GG': [0.11, -1.46, 3.09, 1, 9.9, 31, -14.4, -7.6, -19.2, -2.11, 0.34]}

    length = len(seq)
    sequence_vector = np.zeros((length, 11))
    k = 2
    for i in range(len(seq) - 1):
        sequence_vector[i, 0:11] = phys_dic[seq[i:i + k].replace('T', 'U')]
    return torch.tensor(sequence_vector, dtype=torch.float32)


"""
Physicochemical properties	GG	GA	GC	GU	AG	AA	AC	AU	CG	CA	CC	CU	UG	UA	UC	UU
Shift	-0.01	0.07	0.07	0.23	-0.04	-0.08	0.23	-0.06	0.3	0.11	-0.01	-0.04	0.11	-0.02	0.07	-0.08
Slide	-1.78	-1.7	-1.39	-1.43	-1.5	-1.27	-1.43	-1.36	-1.89	-1.46	-1.78	-1.5	-1.46	-1.45	-1.7	-1.27
Rise	3.32	3.38	3.22	3.24	3.3	3.18	3.24	3.24	3.3	3.09	3.32	3.3	3.09	3.26	3.38	3.18
Tilt	0.3	1.3	0	0.8	0.5	-0.8	0.8	1.1	-0.1	1	0.3	0.5	1	-0.2	1.3	-0.8
Roll	12.1	9.4	6.1	4.8	8.5	7	4.8	7.1	12.1	9.9	8.7	8.5	9.9	10.7	9.4	7
Twist	32	32	35	32	30	31	32	33	27	31	32	30	31	32	32	31
Stacking energy	-11.1	-14.2	-16.9	-13.8	-14	-13.7	-13.8	-15.4	-15.6	-14.4	-11.1	-14	-14.4	-16	-14.2	-13.7
Enthalpy	-12.2	-13.3	-14.2	-10.2	-7.6	-6.6	-10.2	-5.7	-8	-10.5	-12.2	-7.6	-7.6	-8.1	-10.2	-6.6
Entropy	-29.7	-35.5	-34.9	-26.2	-19.2	-18.4	-26.2	-15.5	-19.4	-27.8	-29.7	-19.2	-19.2	-22.6	-26.2	-18.4
Free energy	-3.26	-2.35	-3.42	-2.24	-2.08	-0.93	-2.24	-1.1	-2.36	-2.11	-3.26	-2.08	-2.11	-1.33	-2.35	-0.93
Hydrophilicity	0.17	0.1	0.26	0.27	0.08	0.04	0.14	0.14	0.35	0.21	0.49	0.52	0.34	0.21	0.48	0.44
"""
